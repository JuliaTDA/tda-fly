---
title: "Diaptera wings classification using Topological Data Analysis"
author:
  - name: G. Vituri
    orcid: 0000-0002-0760-5497
    corresponding: true
    email: steve@curvenote.com
    roles:
      - Investigation
      - Project administration
      - Software
      - Visualization
    affiliations:
      - etc
  - name: Sergio Ura
  - name: Northon
keywords:
  - Topological Data Analysis
  - Persistent homology
abstract: |
  In September 2021, a significant jump in seismic activity on the island of La Palma (Canary Islands, Spain) signaled the start of a volcanic crisis that still continues at the time of writing. Earthquake data is continually collected and published by the Instituto Geográphico Nacional (IGN). ...
plain-language-summary: |
  Earthquake data for the island of La Palma from the September 2021 eruption is found ...
key-points:
  - A web scraping script was developed to pull data from the Instituto Geogràphico Nacional into a machine-readable form for analysis
  - Earthquake events on La Palma are consistent with the presence of both mantle and crustal reservoirs.
date: last-modified
bibliography: references.bib
citation:
  container-title: Earth and Space Science
number-sections: true
---

```{julia}
using TDAfly, TDAfly.Preprocessing, TDAfly.TDA
using Images
using Plots: heatmap, plot, @layout
using PersistenceDiagrams
```

## Introduction

## Dataset

We read all wings into images

```{julia}
paths = readdir("images/processed", join = true)
wings = load_wing.(paths);

mosaicview(wings, ncol = 4, fillvalue=1)
```

and calculate its persistence diagrams using the Vietoris-Rips etc.

```{julia}
rips = map(wings) do wing
    # convert to points in R^2
    X = image_to_r2(wing)
    
    # select a random sample
    X_rand = random_sample(X, 750)
    
    # calculate the vietoris-rips barcode
    pd = rips_pd(X_rand, cutoff = 5, threshold = 200)

    # return only 1-dimensional pds
    pd[2]
end;
```

We create the 1-dimensional persistence image for each persistence diagram using 10x10 matrices

```{julia}
PI = PersistenceImage(rips, size = (10, 10))

images = PI.(rips)

function plot_wing_with_pd(rip, image, wing)
  l = @layout [a b; c]

  plot(
      plot_pd(rip, persistence = true)
      ,heatmap(image)
      ,heatmap(wing)
      ,layout = l
  )
end;
```


```{julia}
i = 1
plot_wing_with_pd(rips[i], images[i], wings[i])
```


```{julia}
i = 2
plot_wing_with_pd(rips[i], images[i], wings[i])
```


```{julia}
i = 3
plot_wing_with_pd(rips[i], images[i], wings[i])
```